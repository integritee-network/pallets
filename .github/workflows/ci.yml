name: Build and Test

on:
  push:
    branches:
      - master
      - 'sdk-v[0-9]+.[0-9]+.[0-9]+-*'
      - 'polkadot-v[0-9]+.[0-9]+.[0-9]+-*'
    tags:
      - '[0-9]+.[0-9]+.[0-9]+'
  pull_request:
    branches:
      - master
      - 'sdk-v[0-9]+.[0-9]+.[0-9]+-*'
      - 'polkadot-v[0-9]+.[0-9]+.[0-9]+-*'

env:
  CARGO_TERM_COLOR: always

# Cancel a currently running workflow from the same PR, branch or tag when a new workflow is
# triggered (ref https://stackoverflow.com/a/72408109)
concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

jobs:
  check:
    name: Rust check ${{ matrix.check }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ ubuntu-latest ]
        check: [ cargo build --release,
                 cargo build --release --features dot,
                 cargo build --release --features ksm,
                 cargo test --all --features runtime-benchmarks,
                 cargo test --all --features dot,
                 cargo test --all --features ksm,
                 cargo +nightly fmt --all -- --check,
                 cargo clippy --all-features --all-targets -- -D warnings
        ]
    steps:
      - uses: actions/checkout@v3

      - name: Install nightly toolchain
        run: rustup toolchain install nightly --profile minimal --component rustfmt

      # With rustup's nice new toml format, we just need to run rustup show to install the toolchain
      # https://github.com/actions-rs/toolchain/issues/126#issuecomment-782989659
      - name: Setup Rust toolchain
        run: rustup show

      - uses: Swatinem/rust-cache@v2
        with:
          key: ${{ matrix.rust-target }}-${{ matrix.check }}

      - name: ${{ matrix.check }}
        run: ${{ matrix.check }}

  license-check:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Install cargo-about
        uses: baptiste0928/cargo-install@v2
        with:
          crate: cargo-about
          version: "0.6.6"

      - name: Run license check
        # Explicitly use stable because otherwise cargo will trigger a download of
        # the nightly version specified in rust-toolchain.toml
        run: cargo +stable about generate about.hbs > license.html

      - name: Archive license file
        uses: actions/upload-artifact@v4
        with:
          name: license
          path: license.html

  cargo-zepter:
    name: Cargo Zepter
    runs-on: ubuntu-latest

    steps:
      - name: Install stable Rust
        uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable

      - name: Install Zepter
        run: cargo install --locked -q zepter && zepter --version

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Don't clone historic commits.

      - name: Check features
        run: zepter run check

  cargo-toml-fmt:
    runs-on: ubuntu-latest
    container: "tamasfe/taplo:0.7.0-alpine"
    steps:
      - uses: actions/checkout@v3

      - name: Run Taplo fmt
        run: taplo fmt --check

      - name: Fail-fast; cancel other jobs
        if: failure()
        uses: andymckay/cancel-action@0.2

  check-wasm:
    if: ${{ !startsWith(github.head_ref, 'release/') }}
    name: Check wasm build
    runs-on: ubuntu-latest
    continue-on-error: false
    steps:
      - uses: actions/checkout@v3
      - run: sudo apt-get install -y protobuf-compiler
      - uses: Swatinem/rust-cache@v2
        with:
          # Todo: get cache key from rust-toolchain-toml
          key: wasm
      - run: ./scripts/run_for_all_no_std_crates.sh check --no-default-features --target=wasm32v1-none

