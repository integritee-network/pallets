[package]
name = "pallet-teerex"
description = "The remote attestation registry and verification pallet for integritee blockchains and parachains"
version = "0.10.0"
authors = ["Integritee AG <hello@integritee.network>"]
homepage = "https://integritee.network/"
repository = "https://github.com/integritee-network/pallets/"
license = "MS-RSL"
edition = "2021"

[lints]
workspace = true

[dependencies]
hex = { workspace = true }
log = { workspace = true }
parity-scale-codec = { workspace = true }
scale-info = { workspace = true }
serde = { workspace = true, optional = true }
webpki = { workspace = true }

# local
sgx-verify = { path = "sgx-verify", default-features = false }
teerex-primitives = { path = "../primitives/teerex", default-features = false }

# substrate dependencies
frame-support = { workspace = true }
frame-system = { workspace = true }
pallet-timestamp = { workspace = true }
sp-core = { workspace = true }
sp-io = { workspace = true }
sp-runtime = { workspace = true }
sp-std = { workspace = true }

# benchmarking
frame-benchmarking = { workspace = true, optional = true }
hex-literal = { workspace = true, optional = true }
pallet-aura = { workspace = true, optional = true }
pallet-balances = { workspace = true, optional = true }
sp-consensus-aura = { workspace = true, optional = true }
test-utils = { default-features = false, path = "../test-utils", optional = true }

[dev-dependencies]
env_logger = { workspace = true }
frame-benchmarking = { workspace = true, features = ["std"] }
hex-literal = { workspace = true }
pallet-aura = { workspace = true }
pallet-balances = { workspace = true, features = ["std"] }
serde = { workspace = true, features = ["std"] }
serde_json = { workspace = true, features = ["std"] }
sp-consensus-aura = { workspace = true }
sp-externalities = { workspace = true, features = ["std"] }
sp-keyring = { workspace = true }
test-utils = { path = "../test-utils" }

[features]
default = ["std"]
std = [
    "frame-benchmarking?/std",
    "frame-support/std",
    "frame-system/std",
    "log/std",
    "pallet-timestamp/std",
    "parity-scale-codec/std",
    "scale-info/std",
    "serde/std",
    "sgx-verify/std",
    "sp-consensus-aura?/std",
    "sp-core/std",
    "sp-io/std",
    "sp-runtime/std",
    "sp-std/std",
    "teerex-primitives/std",
    "webpki/std",
    "hex/std",
    "pallet-aura?/std",
    "pallet-balances?/std",
    "serde_json/std",
    "sp-externalities/std",
    "sp-keyring/std",
]
runtime-benchmarks = [
    "frame-benchmarking/runtime-benchmarks",
    "hex-literal",
    "pallet-aura",
    "pallet-balances",
    "pallet-timestamp/runtime-benchmarks",
    "test-utils",
    "frame-support/runtime-benchmarks",
    "frame-system/runtime-benchmarks",
    "pallet-balances?/runtime-benchmarks",
    "sp-consensus-aura",
    "sp-runtime/runtime-benchmarks",
]

try-runtime = [
    "frame-support/try-runtime",
    "frame-system/try-runtime",
    "pallet-aura?/try-runtime",
    "pallet-balances?/try-runtime",
    "pallet-timestamp/try-runtime",
    "sp-runtime/try-runtime",
]
